AWSTemplateFormatVersion: 2010-09-09

Description: |
  This Cloudformation Template creates a Kubernetes Cluster on Ubuntu 22.04 of EC2 Instances.
  Kubernetes cluster comprises of one master node and one worker node.
  Once the Master node is up and running, Worker node automatically joins the Cluster.
  Managers security group allows all protocols from all ports within itself and from the Workers.
  Workers security group allows all protocols from all ports within itself and from the Managers.
  Both Security groups allows SSH (22) connections from anywhere.
  User needs to select appropriate key name when launching the template.
  This template is designed for us-east-1 (N. Virginia) region. If you work on another region, do not forget to change instances imageId

Parameters:
  KeyPairName:
    Description: Enter the name of your Key Pair for SSH connections.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be one of the existing EC2 KeyPair

Resources:
  ManagersSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH for Kube Masters
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 30000
          ToPort: 32767
          CidrIp: 0.0.0.0/0        

  KubeMaster1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c7217cdde317cfec
      InstanceType: t3a.medium
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !GetAtt ManagersSecurityGroup.GroupId
      Tags:                
        -                        
          Key: Name
          Value: !Sub Kube Master 1st on Ubuntu 22.04 of ${AWS::StackName}
      UserData: 
        Fn::Base64: 
          !Sub |
            #! /bin/bash
            apt-get update -y
            apt-get upgrade -y
            hostnamectl set-hostname kube-master
            sudo apt-get install -y apt-transport-https ca-certificates curl gpg
            curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
            echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
            apt-get update
            apt-get install -y kubelet=1.29.0-1.1 kubeadm=1.29.0-1.1 kubectl=1.29.0-1.1 kubernetes-cni docker.io
            apt-mark hold kubelet kubeadm kubectl
            systemctl start docker
            systemctl enable docker
            usermod -aG docker ubuntu
            newgrp docker
            cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
            net.bridge.bridge-nf-call-iptables  = 1
            net.bridge.bridge-nf-call-ip6tables = 1
            net.ipv4.ip_forward                 = 1
            EOF
            sysctl --system
            mkdir /etc/containerd
            containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
            sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
            systemctl restart containerd
            systemctl enable containerd
            kubeadm config images pull
            kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=All
            mkdir -p /home/ubuntu/.kube
            cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
            chown ubuntu:ubuntu /home/ubuntu/.kube/config
            su - ubuntu -c 'kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml'
            su - ubuntu -c 'kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.24/deploy/local-path-storage.yaml'
            sudo -i -u ubuntu kubectl patch storageclass local-path -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
            sudo -i -u ubuntu kubectl taint nodes kube-master node-role.kubernetes.io/control-plane:NoSchedule-

Outputs:
  1stKubeMasterPublicDNSName:
    Description: Kube Master 1st Public DNS Name
    Value: !Sub 
      - ${PublicAddress}
      - PublicAddress: !GetAtt KubeMaster1.PublicDnsName
  1stKubeMasterPrivateDNSName:
    Description: Kube Master 1st Private DNS Name
    Value: !Sub 
      - ${PrivateAddress}
      - PrivateAddress: !GetAtt KubeMaster1.PrivateDnsName